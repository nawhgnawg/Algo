# 프로그래머스 Level 2 - 점프와 순간 이동
# https://school.programmers.co.kr/learn/courses/30/lessons/12980

# 아이언 슈트 구매자가 이동하려는 거리 N이 주어졌을 때, 사용해야 하는 건전지 사용량의 최솟값을 return하는 solution 함수를 만들어 주세요.

# 앞에서 0 → n으로 가는 대신, 역방향으로 n → 0 을 생각하면 아주 단순해져요.
#   n이 짝수라면: 직전에 순간이동으로 온 것(×2 역연산은 ÷2) → 배터리 소모 0, n //= 2
#   n이 홀수라면: 순간이동을 하려면 짝수여야 하므로, 반드시 1칸 점프가 필요 → 배터리 +1, n -= 1
# 즉, n을 0이 될 때까지 반복하면 홀수였던 횟수 = 점프 횟수가 되고, 이건 곧 n의 이진수에서 1의 개수와 정확히 일치합니다.
def solution(n):
    return bin(n).count("1")


# n = 5       # return 2
# n = 6       # return 2
n = 5000    # return 5
# 5000 -> 2500 -> 1250 -> 625 -> 624(1) -> 312 -> 156 -> 78 -> 39 -> 38(2) -> 19 -> 18(3) -> 9 -> 8(4) -> 4 -> 2 -> 1 -> 0(5)
print(solution(n))